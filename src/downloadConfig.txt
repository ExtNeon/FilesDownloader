/**
//MP3 - ;(?<=data-url=\")[^\"]*(?=\");mp3;
https://zvonko.me/;(?<=data-url=\")[^\"]*(?=\");mp3;
https://yandex.ru/;(?<=data-image=\")[^\"]*([jJ][pP][gG])(?=\");jpg;https:
http://mart-penza.narod.ru/;(?<=src=\")[^\"]*([jJ][pP][gG])(?=\");jpg;http://mart-penza.narod.ru/
https://vk.com/;(?<=data-image=\")[^\"]*([jJ][pP][gG])(?=\");jpg;
**/

/**
Представляем вашему вниманию язык представления шаблонных записей.
Синтаксис успешно сворован с CSS.
Почему мне нужен велосипед вместо нормального XML - хороший вопрос.

Возможности:
    * Имеется возможность объявления констант.
    * Возможность задачи значения по умолчанию.


Основная единица языка - блоки. Начинаются с символа ':'. За ними в фигурных скобках следуют поля
Формат:
:block {
    field: value;
}

Имеются следующие блоки:
    * init - блок инициализационных записей. В нём разрешено объявлять константы. Формат констант: $name: value;
        Также, в нём объявляются поля и их значение по умолчанию. Эти поля будут неявно проинициализированы во все записи.
    * record - блок типичной записи. Может содержать только объявление/переопределение записей.



Регулярки для парсера:
    1) (?>\/[*][*])[\s\S]*?(?>\*\*\/) - Поиск многострочных комментариев
    2) (?<=:)[\s\S]*?(?<=[^\\][}])- Ищет все блоки
        2.1) [^\s;}].*?(?=[ ]*{) - Возвращает тип блока
        2.2) [^\s;].*?(?=;) - Возвращает все поля в блоке
            2.2.1) ([^\s;}].*?(?=:))(?:[:\s].+?)(.*) - делит все записи на две группы - название и значение
            2.2.2) ([$][^\s;}].*?)(?:[:][\s]*)(.*)(?=;) - делит все объявления констант на имя и значение.

**/


/** Блок инициализации. Тут объявляем значения по умолчанию и константы. **/
:init {
    /**Константы:**/

    $mp3AllRegexp: (?<=data-url=\")[^\"]*(?=\");
    $jpgAllRegexp: (?<=src=\")[^\"]*([jJ][pP][gG])(?=\");

    /**Записи по умолчанию:**/

    site-url: $EMPTY;
    regexp: $EMPTY;
    extension: $EMPTY;
    parent-link: $EMPTY;
    files-load-limit: 3; /** Максимум - 3 файла с каждого сайта по умолчанию **/
    root-load-path: src\download\;
}


:record {
    site-url: https://zvonko.me/;
    regexp: $mp3AllRegexp;
    extension: mp3;
    files-load-limit: 1;
}

:record {
    site-url: http://mart-penza.narod.ru/;
    regexp: $jpgAllRegexp;
    extension: jpg;
    parent-link: http://mart-penza.narod.ru/;
}

:record {
    site-url: http://boombob.ru/picture.php?id=108582/;
    regexp: (?<=href=\")[^\"]*(jpg)(?=\");
    extension: jpg;
    parent-link: http://boombob.ru/;
    files-load-limit: 10; /** Для примера переопределения параметра, зададим тут значение 10 **/
}